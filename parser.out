Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> grids
Rule 1     grids -> expression
Rule 2     grids -> empty
Rule 3     object -> NAME
Rule 4     expression -> CREATE object NAME
Rule 5     expression -> DESTROY object NAME
Rule 6     empty -> <empty>

Terminals, with rules where they appear

CREATE               : 4
DESTROY              : 5
NAME                 : 3 4 5
error                : 

Nonterminals, with rules where they appear

empty                : 2
expression           : 1
grids                : 0
object               : 4 5

Parsing method: LALR

state 0

    (0) S' -> . grids
    (1) grids -> . expression
    (2) grids -> . empty
    (4) expression -> . CREATE object NAME
    (5) expression -> . DESTROY object NAME
    (6) empty -> .

    CREATE          shift and go to state 4
    DESTROY         shift and go to state 5
    $end            reduce using rule 6 (empty -> .)

    grids                          shift and go to state 1
    expression                     shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> grids .



state 2

    (1) grids -> expression .

    $end            reduce using rule 1 (grids -> expression .)


state 3

    (2) grids -> empty .

    $end            reduce using rule 2 (grids -> empty .)


state 4

    (4) expression -> CREATE . object NAME
    (3) object -> . NAME

    NAME            shift and go to state 7

    object                         shift and go to state 6

state 5

    (5) expression -> DESTROY . object NAME
    (3) object -> . NAME

    NAME            shift and go to state 7

    object                         shift and go to state 8

state 6

    (4) expression -> CREATE object . NAME

    NAME            shift and go to state 9


state 7

    (3) object -> NAME .

    NAME            reduce using rule 3 (object -> NAME .)


state 8

    (5) expression -> DESTROY object . NAME

    NAME            shift and go to state 10


state 9

    (4) expression -> CREATE object NAME .

    $end            reduce using rule 4 (expression -> CREATE object NAME .)


state 10

    (5) expression -> DESTROY object NAME .

    $end            reduce using rule 5 (expression -> DESTROY object NAME .)

